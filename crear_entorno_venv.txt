Video de PLATZI
https://platzi.com/clases/2255-python-intermedio/36459-el-primer-paso-profesional-creacion-de-un-entorno-/

El entorno se crea solo una vez.
python3 -m vend vend

Activar y desactivar entorno virtual : 

activar:
source venv/bin/activate

desactivar:
deactivate

--------------------------------

Esto installa lo que vayamos metiendo en requirements.txt

pip install -r requirements.txt

------------------------------------

Arrancar servidor

flask run

Si el servidor dice que no hay variable app o algo así :
export FLASK_APP=main.py

(ojo en teoria se estaría trayendo el FLASK_TEST que está adentro de main.py)

https://github.com/jeyfredc/Curso-de-flask#Clase-19-Desplegar-Flashes-mensajes-emergentes

-------------------------------------

Para activar el debug mode escribir lo siguiente en la consola:

export FLASK_DEBUG=1
echo $FLASK_DEBUG

----------------------------------

Para activar/pasar modo development "se declara una variable FLASK_ENV

export FLASK_ENV=development
	
Chequeamos si existe --> 
echo FLASK_ENV
si todo OK devuelve:
FLASK_ENV=development

----------------------------------

RuntimeError: Your version of Flask doesn't support signals. This requires Flask 0.6+ with the blinker module installed

$ pip install blinker

----------------------------------

Firestore : 

(venv) macbook@MacBook-Pro-de-martin todo-flask %  gcloud auth login
abre navegador
You are now logged in as [martinpercu@gmail.com].
Your current project is [tasks-taches].  You can change this setting by running:
  $ gcloud config set project PROJECT_ID

Para manejar desde local la DB
(venv) macbook@MacBook-Pro-de-martin todo-flask % gcloud auth application-default login

OJO ! 
Para manejar los proyectos usar estos comandos:

gcloud config list ----> (esto nos muestra donde estamos)

cloud confit set project "el nombre del proyecto" 
osea
cloud confit set project tasks-taches




----------------------------------

Después de media hora sin poder poner la imagen y con el error de image not found, encontré que es bastante útil darle los path a Flask desde el principio

app = Flask(__name__, 
template_folder='../templates', 
static_folder='../static')

----------------------------------

Todo el proyecto TODO piola 
https://github.com/innacroft/Apptask

-----------

Para cambiar de PROJECT en el GCLOUD usar esto:
gcloud config set project tasks-taches-prod
gcloud config set project "ID del project"

para hacer deploy:
gcloud app deploy app.yaml

Este es el url de la app:
https://tasks-taches-prod.nw.r.appspot.com

-----------

Ojo que si hay error 502. Hay que actualizar las dependencias en el archivo de requirements.txt.
Desde la consola lo pueden hacer así:
pip3 freeze > requirements.txt


-----------
A continuation comando copiados desde arriba para ir rápido desde consola
source venv/bin/activate
export FLASK_APP=main.py
export FLASK_DEBUG=1

para development
gcloud config set project tasks-taches
export FLASK_ENV=development

para production
gcloud config set project tasks-taches-prod
export FLASK_ENV=production




